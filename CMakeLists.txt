cmake_minimum_required(VERSION 2.8.5)

PROJECT(SimPla  CXX C)


FIND_PACKAGE(GTest)

include(${PROJECT_SOURCE_DIR}/CMake/utils.cmake)

if(GTEST_FOUND)

 INCLUDE(CTest)
 ENABLE_TESTING()

 option(BUILD_TESTS "Build tests." TRUE)
 if (BUILD_TESTS)
    enable_testing()
 endif()
else()
   function(cxx_test name  )
   endfunction()
endif(GTEST_FOUND)

SET(CMAKE_VERBOSE_MAKEFILE ON)
SET(CMAKE_BUILD_TYPE Release)
#SET(CMAKE_BUILD_TYPE Debug)

#SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
#SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE})
#SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/${CMAKE_BUILD_TYPE}/lib)
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMake ${CMAKE_MODULE_PATH})

FIND_PACKAGE(OpenMP)
SET(CMAKE_CXX_FLAGS "${OpenMP_CXX_FLAGS} -fPIC ")
SET(CMAKE_CXX_FLAGS_DEBUG " -DDEBUG -g")
SET(CMAKE_CXX_FLAGS_RELEASE "  -DNDEBUG -O2  ")

set(Boost_USE_STATIC_LIBS       OFF)
set(Boost_USE_MULTITHREADED     OFF)
set(Boost_USE_STATIC_RUNTIME    OFF)

FIND_PACKAGE(Boost  COMPONENTS date_time program_options )


#execute_process(COMMAND  hg identify
#            OUTPUT_VARIABLE PROJECT_IDENTIFY      
#            WORKING_DIRECTORY   ${PROJECT_SOURCE_DIR} 
#            OUTPUT_STRIP_TRAILING_WHITESPACE 
#git log HEAD        )

MESSAGE(STATUS "Identify: ${PROJECT_IDENTIFY}")
 
ADD_DEFINITIONS(-DIDENTIFY=\"${PROJECT_IDENTIFY}\")

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR}/src)

ADD_SUBDIRECTORY(src )
ADD_SUBDIRECTORY(applications )
ADD_SUBDIRECTORY(doc )


 
